xlab("") +
ggtitle("Property damages")
crops = ggplot(evtype_data, aes(x=evtype, y=cropdmg/1000000)) +
geom_bar(stat="identity", fill="steelblue") +
coord_flip() +
ylab("Million dollars") +
xlab("") +
ggtitle("Crop damages")
total = ggplot(evtype_data, aes(x=evtype, y=totaldmg/1000000000)) +
geom_bar(stat="identity", fill="#224158") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Total damages")
# Print several plots thanks to 'A guest': http://pastebin.com/skwdmEjZ
pushViewport(viewport(layout = grid.layout(3, 2, heights = unit(c(0.5, 5, 5), "null"))))
print(property, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(crops, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
print(total, vp = viewport(layout.pos.row = 3, layout.pos.col = 1:2))
grid.text("Economic damages", vp = viewport(layout.pos.row = 1, layout.pos.col = 1:2))
property = ggplot(evtype_data, aes(x=evtype, y=propdmg/1000000)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("Million dollars") +
xlab("") +
ggtitle("Property damages")
crops = ggplot(evtype_data, aes(x=evtype, y=cropdmg/1000000)) +
geom_bar(stat="identity", fill="steelblue") +
coord_flip() +
ylab("Million dollars") +
xlab("") +
ggtitle("Crop damages")
total = ggplot(evtype_data, aes(x=evtype, y=totaldmg/1000000000)) +
geom_bar(stat="identity", fill="#224158") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Total damages")
# Print several plots thanks to 'A guest': http://pastebin.com/skwdmEjZ
pushViewport(viewport(layout = grid.layout(3, 2, heights = unit(c(0.5, 5, 5), "null"))))
print(property, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(crops, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
print(total, vp = viewport(layout.pos.row = 3, layout.pos.col = 1:2))
grid.text("Economic damages 1950 - 2011", vp = viewport(layout.pos.row = 1, layout.pos.col = 1:2))
?grid.text
ggplot(evtype_year_data, aes(x=year, y=n, color=evtype)) +
geom_line() +
scale_colour_brewer(palette="Set1") +
xlab("Year") +
ylab("Occurrences") +
ggtitle("Evolution of weather events 1050 - 2011")
ggplot(evtype_year_data, aes(x=year, y=n, color=evtype)) +
geom_line() +
scale_colour_brewer(palette="Set1") +
xlab("Year") +
ylab("Occurrences") +
ggtitle("Evolution of weather events 1950 - 2011")
ggplot(evtype_data, aes(x=evtype, y=propdmg/1000000)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("Million dollars") +
xlab("") +
ggtitle("Property damages")
ggplot(evtype_data, aes(x=evtype, y=totaldmg/1000000000)) +
geom_bar(stat="identity", fill="#224158") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Total damages")
evtype_data$evtype <- factor(evtype_data$evtype, levels = c("Other", "Cold weather", "Fire", "Hot weather", "Wind",
"Flood","Rain", "Tornado"))
ggplot(evtype_data, aes(x=evtype, y=totaldmg/1000000000)) +
geom_bar(stat="identity", fill="#224158") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Total damages")
evtype_data$evtype <- factor(evtype_data$evtype, levels = c("Other", "Cold weather", "Fire", "Hot weather", "Tornado",
"Rain", "Wind", "Flood"))
ggplot(evtype_data, aes(x=evtype, y=totaldmg/1000000000)) +
geom_bar(stat="identity", fill="#224158") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Total damages")
# Factor the event type variable and arrange the levels.
evtype_data$evtype <- factor(evtype_data$evtype, levels = c("Other", "Cold weather", "Fire", "Hot weather", "Tornado",
"Rain", "Wind", "Flood"))
property = ggplot(evtype_data, aes(x=evtype, y=propdmg/1000000)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("Million dollars") +
xlab("") +
ggtitle("Property damages")
crops = ggplot(evtype_data, aes(x=evtype, y=cropdmg/1000000)) +
geom_bar(stat="identity", fill="steelblue") +
coord_flip() +
ylab("Million dollars") +
xlab("") +
ggtitle("Crop damages")
total = ggplot(evtype_data, aes(x=evtype, y=totaldmg/1000000000)) +
geom_bar(stat="identity", fill="#224158") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Total damages")
# Print several plots thanks to 'A guest': http://pastebin.com/skwdmEjZ
pushViewport(viewport(layout = grid.layout(3, 2, heights = unit(c(0.5, 5, 5), "null"))))
print(property, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(crops, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
print(total, vp = viewport(layout.pos.row = 3, layout.pos.col = 1:2))
grid.text("Economic costs of weather events 1950 - 2011", vp = viewport(layout.pos.row = 1, layout.pos.col = 1:2))
ggplot(evtype_year_data, aes(x=year, y=n, color=evtype)) +
geom_line() +
scale_colour_brewer(palette="Set1") +
xlab("Year") +
ylab("Occurrences") +
ggtitle("Evolution of weather events 1950 - 2011")
# Factor the event type variable and arrange the levels.
evtype_data$evtype <- factor(evtype_data$evtype, levels = c("Other", "Fire","Wind",
"Cold weather", "Flood", "Hot weather","Rain", "Tornado"))
library(ggplot2)
library(gridExtra)
injuries = ggplot(evtype_data, aes(x=evtype, y=injuries)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("") +
xlab("") +
ggtitle("Injuries")
fatalities = ggplot(evtype_data, aes(x=evtype, y=fatalities)) +
geom_bar(stat="identity", fill="steelblue") +
coord_flip() +
ylab("") +
xlab("") +
ggtitle("Fatalities")
grid.arrange(injuries, fatalities, ncol=2, main = "Total number of people affected (1950 - 2011)")
sum(evtype_data$injuries)
?xtable
library(xtable)
?xtable
evtype_data
print(xtable(evtype_data[,1:3]), type="html")
sum(evtype_data$injuries)
evtype_data[evtype=="Tornado", injuries] / sum(evtype_data$injuries)
evtype_data[7, injuries] / sum(evtype_data$injuries)
sum(evtype_data$injuries)
(evtype_data$evtype=="Tornado") / sum(evtype_data$injuries)
91407 / sum(evtype_data$injuries) * 100
5636 / sum(evtype_data$fatalities) * 100
1292 / sum(evtype_data$injuries) * 100
14063 / sum(evtype_data$injuries) * 100
5636 / sum(evtype_data$fatalities) * 100
9488 / sum(evtype_data$fatalities) * 100
3337 / sum(evtype_data$fatalities) * 100
?xtable
print(xtable(prop.table(evtype_data[,c(1:3,)])), type="html")
print(xtable(prop.table(evtype_data[,c(1:3)])), type="html")
print(xtable(prop.table(evtype_data[,1:3])), type="html")
print(xtable(evtype_data[,1:3]), type="html")
prop.table(evtype_data[,1:3])
evtype_data
print(xtable(evtype_data[,c(1:3,7)]), type="html")
# Factor the event type variable and arrange the levels.
evtype_data$evtype <- factor(evtype_data$evtype, levels = c("Other", "Cold weather", "Fire", "Hot weather", "Tornado",
"Rain", "Wind", "Flood"))
property = ggplot(evtype_data, aes(x=evtype, y=propdmg/1000000000)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("Million dollars") +
xlab("") +
ggtitle("Property damages")
crops = ggplot(evtype_data, aes(x=evtype, y=cropdmg/1000000)) +
geom_bar(stat="identity", fill="steelblue") +
coord_flip() +
ylab("Million dollars") +
xlab("") +
ggtitle("Crop damages")
total = ggplot(evtype_data, aes(x=evtype, y=totaldmg/1000000000)) +
geom_bar(stat="identity", fill="#224158") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Total damages")
# Print several plots thanks to 'A guest': http://pastebin.com/skwdmEjZ
pushViewport(viewport(layout = grid.layout(3, 2, heights = unit(c(0.5, 5, 5), "null"))))
print(property, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(crops, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
print(total, vp = viewport(layout.pos.row = 3, layout.pos.col = 1:2))
grid.text("Economic costs of weather events 1950 - 2011", vp = viewport(layout.pos.row = 1, layout.pos.col = 1:2))
evtype_data
# Factor the event type variable and arrange the levels.
evtype_data$evtype <- factor(evtype_data$evtype, levels = c("Other", "Cold weather", "Fire", "Hot weather", "Tornado",
"Rain", "Wind", "Flood"))
property = ggplot(evtype_data, aes(x=evtype, y=propdmg/1000000000)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Property damages")
crops = ggplot(evtype_data, aes(x=evtype, y=cropdmg/1000000000)) +
geom_bar(stat="identity", fill="steelblue") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Crop damages")
total = ggplot(evtype_data, aes(x=evtype, y=totaldmg/1000000000)) +
geom_bar(stat="identity", fill="#224158") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Total damages")
# Print several plots thanks to 'A guest': http://pastebin.com/skwdmEjZ
pushViewport(viewport(layout = grid.layout(3, 2, heights = unit(c(0.5, 5, 5), "null"))))
print(property, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(crops, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
print(total, vp = viewport(layout.pos.row = 3, layout.pos.col = 1:2))
grid.text("Economic costs of weather events 1950 - 2011", vp = viewport(layout.pos.row = 1, layout.pos.col = 1:2))
evtype_data
174976102787 / sum(evtype_data$totaldmg)
174976102787 / sum(evtype_data$totaldmg) * 100
96337774085 / sum(evtype_data$totaldmg) * 100
96337774085 / sum(evtype_data$totaldmg) * 100
85288253300 / sum(evtype_data$totaldmg) * 100
ggplot(evtype_year_data, aes(x=year, y=n, color=evtype)) +
geom_line() +
scale_colour_brewer(palette="Set1") +
xlab("Year") +
ylab("Occurrences") +
ggtitle("Evolution of weather events 1950 - 2011")
ggplot(evtype_year_data, aes(x=year, y=n, color=evtype)) +
geom_line() +
scale_colour_brewer(palette="Set1") +
xlab("Year") +
ylab("Occurrences") +
ggtitle("Evolution of weather events 1950 - 2011") +
scale_x_continuous(breaks=seq(1950, 2011, 5))
library(dplyr)
evtype_year_groups <- group_by(data, year, evtype)
evtype_year_data <- summarise(evtype_year_groups,
n = n())
evtype_groups <- group_by(data, evtype)
evtype_data <- summarise(evtype_groups,
fatalities = sum(fatalities),
injuries = sum(injuries),
propdmg = sum(prop_total_damage),
cropdmg = sum(crop_total_damage),
totaldmg = sum(total_losses),
n = n())
ggplot(evtype_year_data, aes(x=year, y=n, color=evtype)) +
geom_line() +
scale_colour_brewer(palette="Set1") +
xlab("Year") +
ylab("Occurrences") +
ggtitle("Evolution of weather events 1950 - 2011") +
scale_x_continuous(breaks=seq(1950, 2011, 5))
storm_data <- read.csv("repdata_data_StormData.csv.bz2", stringsAsFactors = FALSE)
names(storm_data)
levels(storm_data$EVTYPE)
table(storm_data$EVTYPE)
# Create a new data frame using only the variables needed
data <- subset(storm_data, select=c("bgn_date", "evtype", "fatalities", "injuries",
"propdmg", "propdmgexp", "cropdmg", "cropdmgexp"))
# Extract the year to another variable
data$year <- as.numeric(substr(strptime(storm_data$bgn_date, "%m/%d/%Y"), 0, 4))
# Read in data
storm_data <- read.csv("repdata_data_StormData.csv.bz2", stringsAsFactors = FALSE)
# Set all variable names to lower caps
names(storm_data) <- tolower(names(storm_data))
thunderstorm <- grepl("thunder|thude|tstm", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(thunderstorm == TRUE, "Thunderstorm", data$evtype)
flood <- grepl("flood|flooo|fld|stream", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(flood == TRUE, "Flood", data$evtype)
tornado <- grepl("tornado|torndao", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(tornado == TRUE, "Tornado", data$evtype)
rain <- grepl("rain|storm|shower", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(rain == TRUE, "Rain", data$evtype)
wind <- grepl("wind|gust|hurr|typ", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(wind == TRUE, "Wind", data$evtype)
heat <- grepl("heat|warm|hot|dry|drought|high", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(heat == TRUE, "Hot weather", data$evtype)
cold <- grepl("cold|chill|freez|ice|icy|snow|wint|blizzard|cool|frost|low", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(cold == TRUE, "Cold weather", data$evtype)
fire <- grepl("fire|smoke", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(fire == TRUE, "Fire", data$evtype)
# Group all other events into 'other'
clean_events <- c("Thunderstorm", "Flood", "Tornado", "Rain", "Wind","Hot weather", "Cold weather", "Fire")
data$evtype <-ifelse(data$evtype %in% clean_events, data$evtype, "Other")
# Create a new data frame using only the variables needed
data <- subset(storm_data, select=c("bgn_date", "evtype", "fatalities", "injuries",
"propdmg", "propdmgexp", "cropdmg", "cropdmgexp"))
# Extract the year to another variable
data$year <- as.numeric(substr(strptime(storm_data$bgn_date, "%m/%d/%Y"), 0, 4))
thunderstorm <- grepl("thunder|thude|tstm", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(thunderstorm == TRUE, "Thunderstorm", data$evtype)
flood <- grepl("flood|flooo|fld|stream", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(flood == TRUE, "Flood", data$evtype)
tornado <- grepl("tornado|torndao", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(tornado == TRUE, "Tornado", data$evtype)
rain <- grepl("rain|storm|shower", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(rain == TRUE, "Rain", data$evtype)
wind <- grepl("wind|gust|hurr|typ", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(wind == TRUE, "Wind", data$evtype)
heat <- grepl("heat|warm|hot|dry|drought|high", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(heat == TRUE, "Hot weather", data$evtype)
cold <- grepl("cold|chill|freez|ice|icy|snow|wint|blizzard|cool|frost|low", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(cold == TRUE, "Cold weather", data$evtype)
fire <- grepl("fire|smoke", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(fire == TRUE, "Fire", data$evtype)
# Group all other events into 'other'
clean_events <- c("Thunderstorm", "Flood", "Tornado", "Rain", "Wind","Hot weather", "Cold weather", "Fire")
data$evtype <-ifelse(data$evtype %in% clean_events, data$evtype, "Other")
# Property and crops damage totals
data$prop_total_damage <- ifelse(data$propdmgexp=="H"|data$propdmgexp=="h", data$propdmg * 100,
ifelse(data$propdmgexp=="K", data$propdmg * 1000,
ifelse(data$propdmgexp=="M"|data$propdmgexp=="m", data$propdmg * 1000000,
ifelse(data$propdmgexp=="B", data$propdmg * 1000000000, data$propdmg))))
data$crop_total_damage <- ifelse(data$cropdmgexp=="k", data$cropdmg * 1000,
ifelse(data$cropdmgexp=="K", data$cropdmg * 1000,
ifelse(data$cropdmgexp=="M", data$cropdmg * 1000000,
ifelse(data$cropdmgexp=="m", data$cropdmg * 1000000, data$cropdmg))))
data$total_losses <- data$prop_total_damage + data$crop_total_damage
library(dplyr)
evtype_year_groups <- group_by(data, year, evtype)
evtype_year_data <- summarise(evtype_year_groups,
n = n())
evtype_groups <- group_by(data, evtype)
evtype_data <- summarise(evtype_groups,
fatalities = sum(fatalities),
injuries = sum(injuries),
propdmg = sum(prop_total_damage),
cropdmg = sum(crop_total_damage),
totaldmg = sum(total_losses),
n = n())
# Factor the event type variable and arrange the levels.
evtype_data$evtype <- factor(evtype_data$evtype, levels = c("Other", "Fire","Wind",
"Cold weather", "Flood", "Hot weather","Rain", "Tornado"))
library(ggplot2)
library(gridExtra)
injuries = ggplot(evtype_data, aes(x=evtype, y=injuries)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("") +
xlab("") +
ggtitle("Injuries")
fatalities = ggplot(evtype_data, aes(x=evtype, y=fatalities)) +
geom_bar(stat="identity", fill="steelblue") +
coord_flip() +
ylab("") +
xlab("") +
ggtitle("Fatalities")
grid.arrange(injuries, fatalities, ncol=2, main = "Total number of people affected 1950 - 2011")
# Factor the event type variable and arrange the levels.
evtype_data$evtype <- factor(evtype_data$evtype, levels = c("Other", "Cold weather", "Fire", "Hot weather", "Tornado",
"Rain", "Wind", "Flood"))
property = ggplot(evtype_data, aes(x=evtype, y=propdmg/1000000000)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Property damages")
crops = ggplot(evtype_data, aes(x=evtype, y=cropdmg/1000000000)) +
geom_bar(stat="identity", fill="steelblue") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Crop damages")
total = ggplot(evtype_data, aes(x=evtype, y=totaldmg/1000000000)) +
geom_bar(stat="identity", fill="#224158") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Total damages")
# Print several plots thanks to 'A guest': http://pastebin.com/skwdmEjZ
pushViewport(viewport(layout = grid.layout(3, 2, heights = unit(c(0.5, 5, 5), "null"))))
print(property, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(crops, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
print(total, vp = viewport(layout.pos.row = 3, layout.pos.col = 1:2))
grid.text("Economic costs of weather events 1950 - 2011", vp = viewport(layout.pos.row = 1, layout.pos.col = 1:2))
# Factor the event type variable and arrange the levels.
evtype_data$evtype <- factor(evtype_data$evtype, levels = c("Other", "Cold weather", "Fire", "Hot weather", "Tornado",
"Rain", "Wind", "Flood"))
property = ggplot(evtype_data, aes(x=evtype, y=propdmg/1000000000)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Property damages")
crops = ggplot(evtype_data, aes(x=evtype, y=cropdmg/1000000000)) +
geom_bar(stat="identity", fill="steelblue") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Crop damages")
total = ggplot(evtype_data, aes(x=evtype, y=totaldmg/1000000000)) +
geom_bar(stat="identity", fill="#224158") +
coord_flip() +
ylab("Billion dollars") +
xlab("") +
ggtitle("Total damages")
# Print several plots thanks to 'A guest': http://pastebin.com/skwdmEjZ
pushViewport(viewport(layout = grid.layout(3, 2, heights = unit(c(0.5, 5, 5), "null"))))
print(property, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(crops, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
print(total, vp = viewport(layout.pos.row = 3, layout.pos.col = 1:2))
grid.text("Economic costs of weather events 1950 - 2011", vp = viewport(layout.pos.row = 1, layout.pos.col = 1:2))
ggplot(evtype_year_data, aes(x=year, y=n, color=evtype)) +
geom_line() +
scale_colour_brewer(palette="Set1") +
xlab("Year") +
ylab("Occurrences") +
ggtitle("Evolution of weather events 1950 - 2011") +
scale_x_continuous(breaks=seq(1950, 2011, 5))
evtype_year_data
ggplot(evtype_data, aes(x=evtype, y=injuries)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("") +
xlab("") +
ggtitle("Injuries")
library(ggplot2)
ggplot(evtype_data, aes(x=evtype, y=injuries)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("") +
xlab("") +
ggtitle("Injuries")
# Create a new data frame using only the variables needed
data <- subset(storm_data, select=c("bgn_date", "evtype", "fatalities", "injuries",
"propdmg", "propdmgexp", "cropdmg", "cropdmgexp"))
# Extract the year to another variable
data$year <- as.numeric(substr(strptime(storm_data$bgn_date, "%m/%d/%Y"), 0, 4))
thunderstorm <- grepl("thunder|thude|tstm", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(thunderstorm == TRUE, "Thunderstorm", data$evtype)
flood <- grepl("flood|flooo|fld|stream", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(flood == TRUE, "Flood", data$evtype)
tornado <- grepl("tornado|torndao", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(tornado == TRUE, "Tornado", data$evtype)
rain <- grepl("rain|storm|shower", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(rain == TRUE, "Rain", data$evtype)
wind <- grepl("wind|gust|hurr|typ", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(wind == TRUE, "Wind", data$evtype)
heat <- grepl("heat|warm|hot|dry|drought|high", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(heat == TRUE, "Hot weather", data$evtype)
cold <- grepl("cold|chill|freez|ice|icy|snow|wint|blizzard|cool|frost|low", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(cold == TRUE, "Cold weather", data$evtype)
fire <- grepl("fire|smoke", ignore.case = TRUE, data$evtype)
data$evtype <- ifelse(fire == TRUE, "Fire", data$evtype)
# Group all other events into 'other'
clean_events <- c("Thunderstorm", "Flood", "Tornado", "Rain", "Wind","Hot weather", "Cold weather", "Fire")
data$evtype <-ifelse(data$evtype %in% clean_events, data$evtype, "Other")
# Property and crops damage totals
data$prop_total_damage <- ifelse(data$propdmgexp=="H"|data$propdmgexp=="h", data$propdmg * 100,
ifelse(data$propdmgexp=="K", data$propdmg * 1000,
ifelse(data$propdmgexp=="M"|data$propdmgexp=="m", data$propdmg * 1000000,
ifelse(data$propdmgexp=="B", data$propdmg * 1000000000, data$propdmg))))
data$crop_total_damage <- ifelse(data$cropdmgexp=="k", data$cropdmg * 1000,
ifelse(data$cropdmgexp=="K", data$cropdmg * 1000,
ifelse(data$cropdmgexp=="M", data$cropdmg * 1000000,
ifelse(data$cropdmgexp=="m", data$cropdmg * 1000000, data$cropdmg))))
data$total_losses <- data$prop_total_damage + data$crop_total_damage
library(dplyr)
evtype_year_groups <- group_by(data, year, evtype)
evtype_year_data <- summarise(evtype_year_groups,
n = n())
evtype_groups <- group_by(data, evtype)
evtype_data <- summarise(evtype_groups,
fatalities = sum(fatalities),
injuries = sum(injuries),
propdmg = sum(prop_total_damage),
cropdmg = sum(crop_total_damage),
totaldmg = sum(total_losses),
n = n())
evtype_data$evtype <- factor(evtype_data$evtype, levels = c("Other", "Fire","Wind",
"Cold weather", "Flood", "Hot weather",
"Rain", "Tornado"))
ggplot(evtype_data, aes(x=evtype, y=injuries)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("") +
xlab("") +
ggtitle("Injuries")
library(plotly)
py <- plotly(username="jcarlosmayo", key="z4a2f3py4i")
py$plotly(p1)
p1 <- ggplot(evtype_data, aes(x=evtype, y=injuries)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("") +
xlab("") +
ggtitle("Injuries")
py$plotly(p1)
p1 <- ggplot(evtype_data, aes(x=evtype, y=injuries)) +
geom_bar(stat="identity", fill="#45b188") +
coord_flip() +
ylab("") +
xlab("") +
ggtitle("Injuries")
py$plotly(p1)
library(plotly)
py <- plotly(username="jcarlosmayo", key="z4a2f3py4i")
py$plotly(p1)
py$ggplotly(p1)
library(plotly)
py <- plotly(username="jcarlosmayo", key="z4a2f3py4i")
p2 <- ggplot(evtype_data, aes(x=evtype, y=fatalities)) +
geom_bar(stat="identity", fill="steelblue") +
coord_flip() +
ylab("") +
xlab("") +
ggtitle("Fatalities")
py$ggplotly(p2)
py$ggplotly(p2)
